CREATE TABLE "notes" (
  "note_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar,
  "content" text,
  "pinned" boolean DEFAULT false,
  "archived" boolean DEFAULT false,
  "created_at" timestamp DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" timestamp DEFAULT (CURRENT_TIMESTAMP)
);

-- ADD THIS FUNCTION
CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- AND ADD THIS TRIGGER
CREATE TRIGGER set_timestamp
BEFORE UPDATE ON notes
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TABLE "tags" (
  "tag_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "note_tags" (
  "note_id" int NOT NULL,
  "tag_id" int NOT NULL,
  PRIMARY KEY ("note_id", "tag_id")
);

COMMENT ON TABLE "notes" IS 'Stores notes (can be created anonymously for now)';

COMMENT ON TABLE "tags" IS 'Stores tags for categorizing notes';

ALTER TABLE "note_tags" ADD FOREIGN KEY ("note_id") REFERENCES "notes" ("note_id");

ALTER TABLE "note_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "tags" ("tag_id");